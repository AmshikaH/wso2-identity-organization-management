CREATE TABLE IF NOT EXISTS IDN_ORG_USER_INVITATION (
    ID INTEGER NOT NULL AUTO_INCREMENT,
    INVITATION_ID VARCHAR(40) NOT NULL,
    CONFIRMATION_CODE VARCHAR(40) NOT NULL,
    USER_NAME VARCHAR(254) NOT NULL,
    DOMAIN_NAME VARCHAR(254) NOT NULL,
    EMAIL VARCHAR(254) NOT NULL,
    USER_ORG_ID VARCHAR(254) NOT NULL,
    INVITED_ORG_ID VARCHAR(254) NOT NULL,
    USER_REDIRECT_URL VARCHAR(1024) NOT NULL,
    STATUS VARCHAR(10) NOT NULL,
    CREATED_AT TIMESTAMP NOT NULL,
    EXPIRED_AT TIMESTAMP NOT NULL,
    PRIMARY KEY (INVITATION_ID)
);

CREATE TABLE IF NOT EXISTS IDN_ORG_USER_INVITE_ROLE_ASSIGNMENT(
    ID INTEGER NOT NULL AUTO_INCREMENT,
    INVITATION_ID VARCHAR(40) NOT NULL,
    APPLICATION_ID VARCHAR(36) NOT NULL,
    ROLE_ID VARCHAR(255) NOT NULL,
    PRIMARY KEY (INVITATION_ID, APPLICATION_ID, ROLE_ID),
    FOREIGN KEY (INVITATION_ID) REFERENCES IDN_ORG_USER_INVITATION(INVITATION_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS SP_APP (
    ID INTEGER NOT NULL AUTO_INCREMENT,
    TENANT_ID INTEGER NOT NULL,
    APP_NAME VARCHAR (255) NOT NULL ,
    USER_STORE VARCHAR (255) NOT NULL,
    USERNAME VARCHAR (255) NOT NULL ,
    DESCRIPTION VARCHAR (1024),
    ROLE_CLAIM VARCHAR (512),
    AUTH_TYPE VARCHAR (255) NOT NULL,
    PROVISIONING_USERSTORE_DOMAIN VARCHAR (512),
    IS_LOCAL_CLAIM_DIALECT CHAR(1) DEFAULT '1',
    IS_SEND_LOCAL_SUBJECT_ID CHAR(1) DEFAULT '0',
    IS_SEND_AUTH_LIST_OF_IDPS CHAR(1) DEFAULT '0',
    IS_USE_TENANT_DOMAIN_SUBJECT CHAR(1) DEFAULT '1',
    IS_USE_USER_DOMAIN_SUBJECT CHAR(1) DEFAULT '1',
    ENABLE_AUTHORIZATION CHAR(1) DEFAULT '0',
    SUBJECT_CLAIM_URI VARCHAR (512),
    IS_SAAS_APP CHAR(1) DEFAULT '0',
    IS_DUMB_MODE CHAR(1) DEFAULT '0',
    UUID CHAR(36),
    IMAGE_URL VARCHAR(1024),
    ACCESS_URL VARCHAR(1024),
    IS_DISCOVERABLE CHAR(1) DEFAULT '0',
    PRIMARY KEY (ID)
 );

CREATE TABLE IF NOT EXISTS APP_ROLE_ASSOCIATION (
    APP_ID CHAR(36) NOT NULL,
    ROLE_ID VARCHAR(255) NOT NULL,
    PRIMARY KEY (APP_ID, ROLE_ID),
    FOREIGN KEY (APP_ID) REFERENCES SP_APP(UUID) ON DELETE CASCADE
);
